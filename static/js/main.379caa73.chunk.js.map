{"version":3,"sources":["components/Table/Table.module.css","data/data.js","components/Popup/Popup.js","components/TableRow/TableRow.js","components/Select/Select.js","components/Table/Table.js","App.js","reportWebVitals.js","index.js","components/TableRow/TableRow.module.css","components/Popup/Popup.module.css","components/Select/Select.module.css"],"names":["module","exports","data","name","type","color","Popup","refInput","React","createRef","state","isValidate","componentDidMount","document","addEventListener","handleEscPress","props","row","setState","componentWillUnmount","removeEventListener","evt","keyCode","onClose","handleOverlayClick","target","currentTarget","handleInputNameChange","value","prevState","handleInputTypeChange","handleColorChange","colors","hex","handleColorChangeComplete","handleSubmitButtonClick","preventDefault","onSubmit","current","focus","className","classes","popup","onClick","this","wrapper","title","form","noValidate","inputWrapper","input","htmlFor","id","ref","onChange","required","error","defaultValue","colorWrapper","style","backgroundColor","disableAlpha","onChangeComplete","closeButton","button","buttonName","Component","TableRow","onDeleteClick","onEditClick","tableRow","minWidth","Select","options","select","event","disabled","map","option","nameSort","a","b","typeSort","Table","isPopupOpen","editedRow","selectedSort","handleSaveButtonClick","localStorage","setItem","JSON","stringify","handleSelectedSort","sort","sortData","slice","handleOpenPopup","handleClosePopup","handleSubmit","dataForm","newRow","index","indexOf","newData","splice","push","handleEditButtonClick","handleDeleteButtonClick","getItem","parse","table","head","buttons","velue","selestedSort","content","length","emptyCell","colSpan","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.379caa73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3cVv6\",\"head\":\"Table_head__1gx4n\",\"title\":\"Table_title__2DnBL\",\"content\":\"Table_content__-Ptjk\",\"button\":\"Table_button__3YRTF\",\"emptyCell\":\"Table_emptyCell__1P3gx\",\"buttons\":\"Table_buttons__3DSRT\"};","export const data = [\n    { name: \"Мятное утро\", type: \"base\", color: \"#86EAE9\" },\n    { name: \"Лавандовый пунш\", type: \"main\", color: \"#B8B2DD\" },\n    { name: \"Ясное небо\", type: \"secondary\", color: \"#37C9EF\" },\n    { name: \"Большая волна\", type: \"primary\", color: \"#2C92D5\" },\n    { name: \"name1\", type: \"main\", color: \"#f4f4f4\" },\n    { name: \"name2\", type: \"side\", color: \"#f8f8f8\" },\n];\n","import React from \"react\";\nimport classes from \"./Popup.module.css\";\nimport { SketchPicker } from \"react-color\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport default class Popup extends React.Component {\n    refInput = React.createRef();\n    state = {\n        name: \"\",\n        type: \"base\",\n        color: \"white\",\n        isValidate: true,\n    };\n\n    componentDidMount = () => {\n        document.addEventListener(\"keydown\", this.handleEscPress);\n        if (this.props.row) {\n            const { name, type, color } = this.props.row;\n            this.setState({ name, type, color, isValidate: true });\n        }\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener(\"keydown\", this.handleEscPress);\n    };\n\n    handleEscPress = (evt) => {\n        if (evt.keyCode === 27) {\n            this.props.onClose();\n        }\n    };\n\n    handleOverlayClick = (evt) => {\n        if (evt.target === evt.currentTarget) {\n            this.props.onClose();\n        }\n    };\n\n    handleInputNameChange = (evt) => {\n        const { value } = evt.target;\n        this.setState((prevState) => ({ ...prevState, name: value }));\n    };\n\n    handleInputTypeChange = (evt) => {\n        const { value } = evt.target;\n        this.setState((prevState) => ({ ...prevState, type: value }));\n    };\n\n    handleColorChange = (colors) => {\n        this.setState((prevState) => ({ ...prevState, color: colors.hex }));\n    };\n\n    handleColorChangeComplete = (colors) => {\n        this.setState((prevState) => ({ ...prevState, color: colors.hex }));\n    };\n\n    handleSubmitButtonClick = (evt) => {\n        evt.preventDefault();\n        if (!this.state.name) {\n            this.setState((prevState) => ({ ...prevState, isValidate: false }));\n            this.refInput.current.focus();\n        } else {\n            this.props.onClose();\n            this.props.onSubmit(this.state);\n        }\n    };\n\n    render() {\n        return (\n            <div className={classes.popup} onClick={this.handleOverlayClick}>\n                <div className={classes.wrapper}>\n                    <h2\n                        className={classes.title}\n                    >{`${this.props.title} данных`}</h2>\n\n                    <form className={classes.form} noValidate>\n                        <div className={classes.inputWrapper}>\n                            <label className={classes.input} htmlFor='name'>\n                                Название\n                            </label>\n                            <input\n                                id='name'\n                                type='text'\n                                name='name'\n                                ref={this.refInput}\n                                value={this.state.name}\n                                onChange={this.handleInputNameChange}\n                                required\n                            />\n                            {!this.state.isValidate ? (\n                                <p className={classes.error}>\n                                    Укажите название\n                                </p>\n                            ) : null}\n                        </div>\n                        <div className={classes.inputWrapper}>\n                            <label className={classes.input} htmlFor='type'>\n                                Тип\n                            </label>\n                            <select\n                                id='type'\n                                type='text'\n                                name='type'\n                                value={this.state.type}\n                                onChange={this.handleInputTypeChange}\n                            >\n                                <option defaultValue value='main'>\n                                    main\n                                </option>\n                                <option value='primary'>primary</option>\n                                <option value='secondary'>secondary</option>\n                                <option value='base'>base</option>\n                            </select>\n                        </div>\n\n                        <div className={classes.colorWrapper}>\n                            <label htmlFor='color'>Цвет:</label>\n                            <input\n                                id='color'\n                                type='hidden'\n                                name='color'\n                                required\n                                value={this.state.color}\n                            />\n                            <div\n                                style={{\n                                    backgroundColor: `${this.state.color}`,\n                                }}\n                            ></div>\n                        </div>\n                        <SketchPicker\n                            disableAlpha\n                            color={this.state.color}\n                            onChange={this.handleColorChange}\n                            onChangeComplete={this.handleColorChangeComplete}\n                        />\n\n                        <button\n                            className={classes.closeButton}\n                            type='button'\n                            onClick={this.props.onClose}\n                        >\n                            <CloseIcon />\n                        </button>\n                        <button\n                            className={classes.button}\n                            type='submit'\n                            onClick={this.handleSubmitButtonClick}\n                        >\n                            {this.props.buttonName}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport classes from \"./TableRow.module.css\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport ColorizeIcon from \"@material-ui/icons/Colorize\";\n\nexport default function TableRow({\n    name,\n    type,\n    color,\n    onDeleteClick,\n    onEditClick,\n}) {\n    return (\n        <tr className={classes.tableRow}>\n            <td\n                style={{\n                    backgroundColor: `${color}`,\n                    minWidth: \"40px\",\n                }}\n            ></td>\n            <td>{name}</td>\n            <td>{type}</td>\n            <td>{color}</td>\n            <td>\n                <button\n                    className={classes.button}\n                    type='button'\n                    onClick={onEditClick}\n                >\n                    <ColorizeIcon />\n                </button>\n            </td>\n            <td>\n                <button\n                    className={classes.button}\n                    type='button'\n                    onClick={onDeleteClick}\n                >\n                    <DeleteForeverIcon />\n                </button>\n            </td>\n        </tr>\n    );\n}\n","import React from \"react\";\nimport classes from \"./Select.module.css\";\n\nfunction Select({ options, defaultValue, value, onChange }) {\n    return (\n        <select\n            className={classes.select}\n            value={value}\n            onChange={(event) => onChange(event.target.value)}\n        >\n            <option disabled value=''>\n                {defaultValue}\n            </option>\n            {options.map((option) => (\n                <option key={option.value} value={option.value}>\n                    {option.name}\n                </option>\n            ))}\n        </select>\n    );\n}\n\nexport default Select;\n","import React from \"react\";\nimport { data } from \"../../data/data\";\nimport classes from \"./Table.module.css\";\nimport Popup from \"../Popup/Popup\";\nimport TableRow from \"../TableRow/TableRow\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Select from \"../Select/Select\";\n\nconst TABLE_DATA = \"\";\n\nconst nameSort = (a, b) => {\n    if (a.name > b.name) {\n        return 1;\n    }\n    if (a.name < b.name) {\n        return -1;\n    }\n    return 0;\n};\n\nconst typeSort = (a, b) => {\n    if (a.type > b.type) {\n        return 1;\n    }\n    if (a.type < b.type) {\n        return -1;\n    }\n    return 0;\n};\n\nexport default class Table extends React.Component {\n    state = {\n        data,\n        isPopupOpen: false,\n        editedRow: null,\n        selectedSort: \"\",\n    };\n\n    componentDidMount() {\n        const data = localStorage.getItem(TABLE_DATA);\n        data &&\n            this.setState((prevState) => ({\n                ...prevState,\n                data: JSON.parse(data),\n            }));\n    }\n\n    handleSaveButtonClick = () => {\n        localStorage.setItem(TABLE_DATA, JSON.stringify(this.state.data));\n    };\n\n    handleSelectedSort = (sort) => {\n        this.setState((prevState) => {\n            let sortData = prevState.data.slice();\n            if (sort === \"name\") {\n                sortData.sort(nameSort);\n            }\n            if (sort === \"type\") {\n                sortData.sort(typeSort);\n            }\n            return { data: sortData };\n        });\n    };\n\n    handleOpenPopup = () => {\n        this.setState((prevState) => ({ ...prevState, isPopupOpen: true }));\n    };\n\n    handleClosePopup = () => {\n        this.setState((prevState) => ({\n            ...prevState,\n            isPopupOpen: false,\n            editedRow: null,\n        }));\n    };\n\n    handleSubmit = (dataForm) => {\n        const { name, type, color } = dataForm;\n        const newRow = { name, type, color };\n        this.setState((prevState) => {\n            if (prevState.editedRow) {\n                const index = this.state.data.indexOf(this.state.editedRow);\n                const newData = prevState.data.slice();\n                newData.splice(index, 1, newRow);\n                return { ...prevState, data: newData };\n            } else {\n                const newData = prevState.data.slice();\n                newData.push(newRow);\n\n                return { ...prevState, data: newData };\n            }\n        });\n        if (this.state.editedRow) {\n            const index = this.state.data.indexOf(this.state.editedRow);\n            this.setState((prevState) => {\n                const newData = prevState.data.slice();\n                newData.splice(index, 1);\n                return { ...prevState, data: newData };\n            });\n        }\n    };\n\n    handleEditButtonClick = (row) => {\n        const index = this.state.data.indexOf(row);\n        this.setState((prevState) => ({\n            ...prevState,\n            isPopupOpen: true,\n            editedRow: prevState.data[index],\n        }));\n    };\n\n    handleDeleteButtonClick = (row) => {\n        const index = this.state.data.indexOf(row);\n        this.setState((prevState) => {\n            const newData = prevState.data.slice();\n            newData.splice(index, 1);\n            return { ...prevState, data: newData };\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <div className={classes.table}>\n                    <div className={classes.head}>\n                        <h1 className={classes.title}>Таблица цветов</h1>\n                        <div className={classes.buttons}>\n                            <button\n                                className={classes.button}\n                                type='button'\n                                onClick={this.handleOpenPopup}\n                            >\n                                <AddIcon />\n                            </button>\n                            <button\n                                className={classes.button}\n                                type='button'\n                                onClick={this.handleSaveButtonClick}\n                            >\n                                Сохранить\n                            </button>\n                        </div>\n                    </div>\n                    <Select\n                        velue={this.state.selestedSort}\n                        onChange={this.handleSelectedSort}\n                        defaultValue='Сортировка'\n                        options={[\n                            { value: \"name\", name: \"По названию\" },\n                            { value: \"type\", name: \"По типу\" },\n                        ]}\n                    />\n\n                    <table className={classes.content}>\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Название</th>\n                                <th>Тип</th>\n                                <th>Код</th>\n                                <th>Изменить</th>\n                                <th>Удалить</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.data.length ? (\n                                this.state.data.map((row, index) => (\n                                    <TableRow\n                                        key={`${row.name}${index}`}\n                                        name={row.name}\n                                        type={row.type}\n                                        color={row.color}\n                                        onDeleteClick={() =>\n                                            this.handleDeleteButtonClick(row)\n                                        }\n                                        onEditClick={() =>\n                                            this.handleEditButtonClick(row)\n                                        }\n                                    />\n                                ))\n                            ) : (\n                                <tr>\n                                    <td\n                                        className={classes.emptyCell}\n                                        colSpan='6'\n                                    >\n                                        Нет данных\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n                {this.state.isPopupOpen && this.state.editedRow ? (\n                    <Popup\n                        title='Изменение'\n                        buttonName='Сохранить'\n                        row={this.state.editedRow}\n                        onClose={this.handleClosePopup}\n                        onSubmit={this.handleSubmit}\n                    />\n                ) : this.state.isPopupOpen ? (\n                    <Popup\n                        title='Добавление'\n                        buttonName='Добавить'\n                        onClose={this.handleClosePopup}\n                        onSubmit={this.handleSubmit}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Table from \"./components/Table/Table\";\n\nfunction App() {\n    return (\n        <div className='App'>\n            <div className='container'>\n                <Table />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"TableRow_tableRow__2Tvj_\",\"button\":\"TableRow_button__35qg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__3TSql\",\"wrapper\":\"Popup_wrapper__xf0Cj\",\"form\":\"Popup_form__1xby3\",\"title\":\"Popup_title__1Xsgh\",\"inputWrapper\":\"Popup_inputWrapper__2tNPG\",\"input\":\"Popup_input__2rlj0\",\"colorWrapper\":\"Popup_colorWrapper__3IBx2\",\"error\":\"Popup_error__3tELA\",\"button\":\"Popup_button__2_oDC\",\"closeButton\":\"Popup_closeButton__MlIK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3UVD7\"};"],"sourceRoot":""}